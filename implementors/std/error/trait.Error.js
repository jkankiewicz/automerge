(function() {var implementors = {};
implementors["automerge"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/enum.DecodingError.html\" title=\"enum automerge::DecodingError\">Error</a>","synthetic":false,"types":["automerge::decoding::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/enum.InvalidChangeError.html\" title=\"enum automerge::InvalidChangeError\">InvalidChangeError</a>","synthetic":false,"types":["automerge::decoding::InvalidChangeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/enum.EncodingError.html\" title=\"enum automerge::EncodingError\">Error</a>","synthetic":false,"types":["automerge::encoding::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"enum\" href=\"automerge/enum.AutomergeError.html\" title=\"enum automerge::AutomergeError\">AutomergeError</a>","synthetic":false,"types":["automerge::error::AutomergeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"automerge/struct.InvalidActorId.html\" title=\"struct automerge::InvalidActorId\">InvalidActorId</a>","synthetic":false,"types":["automerge::error::InvalidActorId"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.62.1/std/error/trait.Error.html\" title=\"trait std::error::Error\">Error</a> for <a class=\"struct\" href=\"automerge/struct.InvalidChangeHashSlice.html\" title=\"struct automerge::InvalidChangeHashSlice\">InvalidChangeHashSlice</a>","synthetic":false,"types":["automerge::error::InvalidChangeHashSlice"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()